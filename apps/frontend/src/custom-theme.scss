@use 'sass:math';
@use 'sass:map';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$stPatricksBlue : (
  50: #e9ebf6,
  100: #c8cce8,
  200: #a4abd9,
  300: #808bc9,
  400: #6570be,
  500: #4c57b2,
  600: #464fa8,
  700: #3d459c,
  800: #353b90,
  900: #29297A,
  A100: #b7e2f2,
  A200:#8bcfe8,
  A300: #67bcde,
  A400: #53aed8,
  contrast: (
    50: #676973,
    100: #51556d,
    200: #363f66,
    300: #072658,
    400: #faffff,
    500: #d8d8ff,
    600: #cccaff,
    700: #beb9ff,
    800: #b1a8ff,
    900: #fff,
    A100: #3c6674,
    A200:#00596f,
    A300: #004966,
    A400: #003e61,
  )
);  

$frontend-primary: mat.define-palette($stPatricksBlue, 900);
$frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-light-theme((
  color: (
    primary: $frontend-primary,
    accent: $frontend-accent,
    warn: $frontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

